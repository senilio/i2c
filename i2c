#!/usr/bin/env python
import sys
import subprocess

def usage():
    ''' Print usage and exit'''
    print('Usage: ' + sys.argv[0] + ' server(s)')
    sys.exit()

def main():
    # Just assume everything after argv[0] is servers to connect to
    args=sys.argv[1:]

    # Decide number of rows and columns in the iTerm2 window
    if len(args) % 2 == 0:
        rows=len(args)/2
        columns=len(args)/2
        even=1
    else:
        rows=len(args)/2+1
        columns=len(args)/2+1
        even=0

    # Print usage if there's no arguments
    if len(args) == 0:
        usage()

    # Start compiling the applescript
    ascript  = 'tell application "iTerm2"\n'
    ascript += '  tell current window\n'
    ascript += '    create window with default profile\n'
    ascript += '  end tell\n'
    ascript += '  set p1 to (current session of current window)\n'

    # Used for printing the number of horizontal panes
    index=1

    # Create the horizontal panes
    for i in range(1, rows):
        ascript += '  tell p{}\n'.format(index)
        ascript += '    set p{} to (split horizontally with same profile)\n'.format(index+1)
        ascript += '  end tell\n'
        index+=1

    # Create the vertical panes
    for i in range(1, columns+even):
        ascript += '  tell p{}\n'.format(i)
        ascript += '    set p{} to (split vertically with same profile)\n'.format(i+columns)
        ascript += '  end tell\n'

    # Insert text into each pane
    for i in range(0, len(args)):
        ascript += '  tell p{}\n'.format(i+1)
        ascript += '    write text "unset HISTFILE && ssh {}"\n'.format(args[i])
        ascript += '  end tell\n'

    # Enable broadcast
    ascript += '  tell application "System Events"\n'
    ascript += '    keystroke "i" using {command down, option down}\n'
    ascript += '  end tell\n'

    # Close the script
    ascript += 'end tell'

    # Execute applescript
    subprocess.call(['osascript', '-e', ascript])



if __name__ == '__main__':
    main()

